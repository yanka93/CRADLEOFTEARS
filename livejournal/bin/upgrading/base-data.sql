# This file is automatically generated from MySQL by $LJHOME/bin/dumpsql.pl
# Don't submit a diff against a hand-modified file - dump and diff instead.

REPLACE INTO codes (code, item, sortorder, type) VALUES ('#000000', 'Black', '210', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#0000FF', 'Blue, Bright', '150', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#00025C', 'Blue, Midnight', '140', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#002400', 'Green, Pine', '85', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#00EEC4', 'Green, Mint', '110', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#00FF00', 'Green, Bright', '100', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#00FFFF', 'Blue, Sky', '130', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#01059D', 'Blue, Navy', '145', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#015B01', 'Green, Dark', '90', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#019501', 'Green', '95', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#019997', 'Blue, Ocean', '125', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#066D98', 'Blue, Steel', '120', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#330000', ' Brown, Dark', '30', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#520155', 'Purple, Wine', '185', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#5B0101', 'Red, Darkest', '5', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#6569FF', 'Blue, Medium', '155', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#676767', 'Gray, Dark', '215', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#696A0A', 'Olive', '65', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#88FEE9', 'Green, Aqua', '115', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#8E01D7', 'Violet, Dark', '170', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#993300', ' Brown', '35', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#9E0000', 'Red, Dark', '10', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#A501A7', 'Purple', '190', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#ADB1FF', 'Blue, Light', '160', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#B0B200', 'Yellow, Dark', '70', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#B3FFB3', 'Green, Light', '105', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#BBFFFE', 'Blue, Light Sky', '135', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#BC5D00', 'Orange, Brown', '45', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#C0C0C0', 'Gray, Light', '220', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#CA65FF', 'Violet', '175', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#CC9966', ' Brown, Tan', '40', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#E3E5FF', 'Blue, Powder', '165', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#EFCFFF', 'Violet, Light', '180', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#F999FF', 'Purple, Pink', '200', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#FCDDFF', 'Pink, Ice', '205', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#FEFFBB', 'Yellow, Light', '80', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#FF0000', 'Red', '15', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#FF00FF', 'Purple, Fuchsia', '195', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#FF6600', 'Orange, Bright', '50', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#FF8B8B', 'Red, Light', '20', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#FFB22B', 'Orange', '55', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#FFCBCB', 'Red, Pink', '25', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#FFE2A3', 'Orange, Light', '60', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#FFFF00', 'Yellow', '75', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('#FFFFFF', 'White', '225', 'color');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('0', 'None', '0', 'encname');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('0', 'none', '0', 'encoding');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('1', 'Western European (Windows)', '0', 'encname');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('1', 'windows-1252', '0', 'encoding');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('10', 'Western European (ISO)', '0', 'encname');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('10', 'iso-8859-1', '0', 'encoding');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('11', 'CP949', '0', 'encoding');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('11', 'Korean (Windows)', '0', 'encname');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('12', 'Chinese (Simplified)', '0', 'encname');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('12', 'GB2312', '0', 'encoding');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('2', 'UTF-8', '0', 'encoding');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('2', 'Unicode (UTF-8)', '0', 'encname');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('3', 'Cyrillic (Windows)', '0', 'encname');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('3', 'windows-1251', '0', 'encoding');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('4', 'Hebrew (ISO)', '0', 'encname');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('4', 'hebrew', '0', 'encoding');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('5', 'Greek', '0', 'encname');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('5', 'windows-1253', '0', 'encoding');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('6', 'Cyrillic (KOI8)', '0', 'encname');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('6', 'KOI8-R', '0', 'encoding');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('7', 'Japanese (SHIFT-JIS)', '0', 'encname');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('7', 'sjis', '0', 'encoding');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('8', 'Japanese (EUC)', '0', 'encname');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('8', 'euc-jp', '0', 'encoding');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('9', 'BIG5', '0', 'encoding');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('9', 'Chinese Traditional (Big5)', '0', 'encname');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('AD', 'Andorra', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('AE', 'United Arab Emirates', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('AF', 'Afghanistan', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('AG', 'Antigua and Barbuda', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('AI', 'Anguilla', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('AK', 'Alaska', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('AL', 'Alabama', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('AL', 'Albania', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('AM', 'Armenia', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('AN', 'Netherlands Antilles', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('AO', 'Angola', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('AQ', 'Antarctica', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('AR', 'Argentina', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('AA', 'Armed Forces Americas', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('AE', 'Armed Forces Other (AE)', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('AP', 'Armed Forces Pacific', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('AR', 'Arkansas', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('AS', 'American Samoa', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('AS', 'American Samoa', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('AT', 'Austria', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('AU', 'Australia', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('AW', 'Aruba', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('AZ', 'Arizona', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('AZ', 'Azerbaijan', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('BA', 'Bosnia and Herzegovina', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('BB', 'Barbados', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('BD', 'Bangladesh', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('BE', 'Belgium', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('BF', 'Burkina Faso', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('BG', 'Bulgaria', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('BH', 'Bahrain', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('BI', 'Burundi', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('BJ', 'Benin', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('BM', 'Bermuda', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('BN', 'Brunei Darussalam', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('BO', 'Bolivia', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('BR', 'Brazil', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('BS', 'Bahamas', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('BT', 'Bhutan', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('BV', 'Bouvet Island', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('BW', 'Botswana', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('BY', 'Belarus', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('BZ', 'Belize', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('CA', 'California', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('CA', 'Canada', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('CC', 'Cocos (Keeling) Islands', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('CF', 'Central African Republic', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('CG', 'Congo', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('CH', 'Switzerland', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('CI', 'Cote D\'Ivoire (Ivory Coast)', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('CK', 'Cook Islands', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('CL', 'Chile', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('CM', 'Cameroon', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('CN', 'China', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('CO', 'Colombia', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('CO', 'Colorado', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('CR', 'Costa Rica', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('CS', 'Czechoslovakia (former)', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('CT', 'Connecticut', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('CU', 'Cuba', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('CV', 'Cape Verde', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('CX', 'Christmas Island', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('CY', 'Cyprus', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('CZ', 'Czech Republic', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('DC', 'Dist. of Columbia', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('DE', 'Delaware', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('DE', 'Deutsch', '1', 'lang');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('DE', 'Germany', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('DJ', 'Djibouti', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('DK', 'Denmark', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('DM', 'Dominica', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('DO', 'Dominican Republic', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('DZ', 'Algeria', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('EC', 'Ecuador', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('EE', 'Estonia', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('EG', 'Egypt', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('EH', 'Western Sahara', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('EN', 'English', '1', 'lang');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('ER', 'Eritrea', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('ES', 'Espanol', '1', 'lang');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('ES', 'Spain', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('ET', 'Ethiopia', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('FI', 'Finland', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('FJ', 'Fiji', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('FK', 'Falkland Islands (Malvinas)', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('FL', 'Florida', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('FM', 'Federated States of Micronesia', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('FM', 'Micronesia', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('FO', 'Faroe Islands', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('FR', 'Francais', '1', 'lang');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('FR', 'France', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('FX', 'France, Metropolitan', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('GA', 'Gabon', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('GA', 'Georgia', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('GD', 'Grenada', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('GE', 'Georgia', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('GF', 'French Guiana', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('GH', 'Ghana', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('GI', 'Gibraltar', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('GL', 'Greenland', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('GM', 'Gambia', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('GN', 'Guinea', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('GP', 'Guadeloupe', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('GQ', 'Equatorial Guinea', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('GR', 'Greece', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('GS', 'S. Georgia and S. Sandwich Isls.', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('GT', 'Guatemala', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('GU', 'Guam', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('GU', 'Guam', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('GW', 'Guinea-Bissau', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('GY', 'Guyana', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('HI', 'Hawaii', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('HK', 'Hong Kong', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('HM', 'Heard and McDonald Islands', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('HN', 'Honduras', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('HR', 'Croatia (Hrvatska)', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('HT', 'Haiti', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('HU', 'Hungary', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('IA', 'Iowa', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('ID', 'Idaho', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('ID', 'Indonesia', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('IE', 'Ireland', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('IL', 'Illinois', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('IL', 'Israel', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('IN', 'India', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('IN', 'Indiana', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('IO', 'British Indian Ocean Territory', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('IQ', 'Iraq', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('IR', 'Iran', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('IS', 'Iceland', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('IT', 'Italy', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('JM', 'Jamaica', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('JO', 'Jordan', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('JP', 'Japan', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('KE', 'Kenya', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('KG', 'Kyrgyzstan', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('KH', 'Cambodia', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('KI', 'Kiribati', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('KM', 'Comoros', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('KN', 'Saint Kitts and Nevis', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('KP', 'Korea (North)', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('KR', 'Korea (South)', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('KS', 'Kansas', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('KW', 'Kuwait', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('KY', 'Cayman Islands', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('KY', 'Kentucky', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('KZ', 'Kazakhstan', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('LA', 'Laos', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('LA', 'Louisiana', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('LB', 'Lebanon', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('LC', 'Saint Lucia', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('LI', 'Liechtenstein', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('LJSC', 'Scotland', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('LK', 'Sri Lanka', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('LR', 'Liberia', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('LS', 'Lesotho', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('LT', 'Lithuania', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('LU', 'Luxembourg', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('LV', 'Latvia', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('LY', 'Libya', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('MA', 'Massachusetts', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('MA', 'Morocco', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('MC', 'Monaco', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('MD', 'Maryland', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('MD', 'Moldova', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('ME', 'Maine', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('MH', 'Marshall Islands', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('MG', 'Madagascar', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('MH', 'Marshall Islands', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('MI', 'Michigan', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('MK', 'Macedonia', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('ML', 'Mali', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('MM', 'Myanmar', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('MN', 'Minnesota', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('MN', 'Mongolia', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('MO', 'Macau', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('MO', 'Missouri', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('MP', 'Northern Mariana Islands', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('MP', 'Northern Mariana Islands', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('MQ', 'Martinique', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('MR', 'Mauritania', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('MS', 'Mississippi', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('MS', 'Montserrat', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('MT', 'Malta', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('MT', 'Montana', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('MU', 'Mauritius', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('MV', 'Maldives', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('MW', 'Malawi', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('MX', 'Mexico', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('MY', 'Malaysia', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('MZ', 'Mozambique', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('NA', 'Namibia', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('NC', 'New Caledonia', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('NC', 'North Carolina', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('ND', 'North Dakota', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('NE', 'Nebraska', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('NE', 'Niger', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('NF', 'Norfolk Island', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('NG', 'Nigeria', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('NH', 'New Hampshire', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('NI', 'Nicaragua', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('NJ', 'New Jersey', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('NL', 'Netherlands', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('NM', 'New Mexico', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('NO', 'Norway', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('NP', 'Nepal', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('NR', 'Nauru', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('NT', 'Neutral Zone', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('NU', 'Niue', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('NV', 'Nevada', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('NY', 'New York', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('NZ', 'New Zealand (Aotearoa)', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('OH', 'Ohio', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('OK', 'Oklahoma', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('OM', 'Oman', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('OR', 'Oregon', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('PA', 'Panama', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('PA', 'Pennsylvania', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('PE', 'Peru', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('PF', 'French Polynesia', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('PG', 'Papua New Guinea', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('PH', 'Philippines', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('PK', 'Pakistan', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('PL', 'Poland', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('PM', 'St. Pierre and Miquelon', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('PN', 'Pitcairn', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('PR', 'Puerto Rico', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('PR', 'Puerto Rico', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('PS', 'Palestine', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('PT', 'Portugal', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('PW', 'Palau', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('PY', 'Paraguay', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('QA', 'Qatar', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('RE', 'Reunion', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('RI', 'Rhode Island', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('RO', 'Romania', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('RU', 'Russian Federation', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('RU', 'Russian', '1', 'lang');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('RW', 'Rwanda', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('SA', 'Saudi Arabia', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('SB', 'Solomon Islands', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('SC', 'Seychelles', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('SC', 'South Carolina', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('SD', 'South Dakota', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('SD', 'Sudan', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('SE', 'Sweden', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('SG', 'Singapore', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('SH', 'St. Helena', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('SI', 'Slovenia', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('SJ', 'Svalbard and Jan Mayen Islands', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('SK', 'Slovak Republic', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('SL', 'Sierra Leone', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('SM', 'San Marino', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('SN', 'Senegal', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('SO', 'Somalia', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('SR', 'Suriname', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('ST', 'Sao Tome and Principe', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('SU', 'USSR (former)', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('SV', 'El Salvador', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('SY', 'Syria', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('SZ', 'Swaziland', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('TC', 'Turks and Caicos Islands', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('TD', 'Chad', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('TF', 'French Southern Territories', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('TG', 'Togo', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('TH', 'Thailand', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('TJ', 'Tajikistan', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('TK', 'Tokelau', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('TM', 'Turkmenistan', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('TN', 'Tennessee', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('TN', 'Tunisia', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('TO', 'Tonga', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('TP', 'East Timor', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('TR', 'Turkey', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('TT', 'Trinidad and Tobago', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('TV', 'Tuvalu', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('TW', 'Taiwan', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('TX', 'Texas', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('TZ', 'Tanzania', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('UA', 'Ukraine', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('UG', 'Uganda', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('UK', 'United Kingdom', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('UM', 'US Minor Outlying Islands', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('US', 'United States', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('UT', 'Utah', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('UY', 'Uruguay', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('UZ', 'Uzbekistan', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('VA', 'Vatican City State (Holy See)', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('VA', 'Virginia', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('VC', 'Saint Vincent and the Grenadines', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('VE', 'Venezuela', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('VG', 'Virgin Islands (British)', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('VI', 'Virgin Islands (U.S.)', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('VI', 'Virgin Islands', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('VN', 'Viet Nam', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('VT', 'Vermont', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('VU', 'Vanuatu', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('WA', 'Washington', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('WF', 'Wallis and Futuna Islands', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('WI', 'Wisconsin', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('WS', 'Samoa', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('WV', 'West Virginia', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('WY', 'Wyoming', '0', 'state');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('YE', 'Yemen', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('YT', 'Mayotte', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('YU', 'Yugoslavia', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('ZA', 'South Africa', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('ZM', 'Zambia', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('ZR', 'Zaire', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('ZW', 'Zimbabwe', '0', 'country');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('act', 'Australian Capital Territory', '0', 'stateau');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('al', 'Alberta', '0', 'stateca');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('bc', 'British Columbia', '0', 'stateca');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('be', 'Berlin', '0', 'statede');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('bm', 'Bremen', '0', 'statede');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('br', 'Brandenburg', '0', 'statede');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('bw', 'Baden-Wuerttemberg', '0', 'statede');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('by', 'Bayern', '0', 'statede');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('ha', 'Hamburg', '0', 'statede');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('hs', 'Hessen', '0', 'statede');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('ma', 'Manitoba', '0', 'stateca');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('mv', 'Mecklenburg-Vorpommern', '0', 'statede');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('nb', 'New Brunswick', '0', 'stateca');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('nf', 'Newfoundland', '0', 'stateca');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('ni', 'Niedersachsen', '0', 'statede');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('ns', 'Nova Scotia', '0', 'stateca');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('nsw', 'New South Wales', '0', 'stateau');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('nt', 'Northern Territory', '0', 'stateau');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('nu', 'Nunavut', '0', 'stateca');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('nw', 'Nordrhein-Westfalen', '0', 'statede');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('nw', 'Northwest Territories', '0', 'stateca');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('on', 'Ontario', '0', 'stateca');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('pe', 'Prince Edward Island', '0', 'stateca');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('ql', 'Queensland', '0', 'stateau');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('qu', 'Quebec', '0', 'stateca');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('rp', 'Rheinland-Pfalz', '0', 'statede');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('sa', 'Sachsen-Anhalt', '0', 'statede');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('sa', 'Saskatchewan', '0', 'stateca');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('sa', 'South Australia', '0', 'stateau');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('sc', 'Sachsen', '0', 'statede');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('sh', 'Schleswig-Holstein', '0', 'statede');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('sl', 'Saarland', '0', 'statede');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('ta', 'Tasmania', '0', 'stateau');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('th', 'Thueringen', '0', 'statede');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('vi', 'Victoria', '0', 'stateau');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('wa', 'Western Australia', '0', 'stateau');
REPLACE INTO codes (code, item, sortorder, type) VALUES ('yt', 'Yukon Territory', '0', 'stateca');
INSERT IGNORE INTO logproplist (datatype, des, name, prettyname, scope, sortorder) VALUES ('num', 'Unix time of the last change to number of comments to this post.', 'commentalter', 'Comments altered', 'general', '99');
UPDATE logproplist SET datatype='num',des='Unix time of the last change to number of comments to this post.',prettyname='Comments altered',scope='general',sortorder='99' WHERE name='commentalter';
INSERT IGNORE INTO logproplist (datatype, des, name, prettyname, scope, sortorder) VALUES ('char', 'Your current mood.', 'current_mood', 'Current Mood', 'general', '5');
UPDATE logproplist SET datatype='char',des='Your current mood.',prettyname='Current Mood',scope='general',sortorder='5' WHERE name='current_mood';
INSERT IGNORE INTO logproplist (datatype, des, name, prettyname, scope, sortorder) VALUES ('num', 'Your current mood ID number, if known.', 'current_moodid', 'Current Mood ID#', 'general', '6');
UPDATE logproplist SET datatype='num',des='Your current mood ID number, if known.',prettyname='Current Mood ID#',scope='general',sortorder='6' WHERE name='current_moodid';
INSERT IGNORE INTO logproplist (datatype, des, name, prettyname, scope, sortorder) VALUES ('char', 'Music you\'re currently listening to.', 'current_music', 'Current Music', 'general', '10');
UPDATE logproplist SET datatype='char',des='Music you\'re currently listening to.',prettyname='Current Music',scope='general',sortorder='10' WHERE name='current_music';
INSERT IGNORE INTO logproplist (datatype, des, name, prettyname, scope, sortorder) VALUES ('bool', 'True if comments to this item include screened comments', 'hasscreened', 'Has screened replies', 'general', '99');
UPDATE logproplist SET datatype='bool',des='True if comments to this item include screened comments',prettyname='Has screened replies',scope='general',sortorder='99' WHERE name='hasscreened';
INSERT IGNORE INTO logproplist (datatype, des, name, prettyname, scope, sortorder) VALUES ('bool', 'Set to true if this item shouldn\'t show up on people\'s friends lists (because it occurred in the past)', 'opt_backdated', 'Back-dated', 'general', '35');
UPDATE logproplist SET datatype='bool',des='Set to true if this item shouldn\'t show up on people\'s friends lists (because it occurred in the past)',prettyname='Back-dated',scope='general',sortorder='35' WHERE name='opt_backdated';
INSERT IGNORE INTO logproplist (datatype, des, name, prettyname, scope, sortorder) VALUES ('bool', 'Turn on if readers can\'t post comments on this entry.', 'opt_nocomments', 'Don\'t Allow Comments', 'general', '25');
UPDATE logproplist SET datatype='bool',des='Turn on if readers can\'t post comments on this entry.',prettyname='Don\'t Allow Comments',scope='general',sortorder='25' WHERE name='opt_nocomments';
INSERT IGNORE INTO logproplist (datatype, des, name, prettyname, scope, sortorder) VALUES ('bool', 'Turn on if the poster isn\'t interested in receiving comments to this post by email', 'opt_noemail', 'Don\'t email comments', 'general', '40');
UPDATE logproplist SET datatype='bool',des='Turn on if the poster isn\'t interested in receiving comments to this post by email',prettyname='Don\'t email comments',scope='general',sortorder='40' WHERE name='opt_noemail';
INSERT IGNORE INTO logproplist (datatype, des, name, prettyname, scope, sortorder) VALUES ('bool', 'Turn on if post contains HTML and shouldn\'t be formatted', 'opt_preformatted', 'Don\'t Auto-Format', 'general', '20');
UPDATE logproplist SET datatype='bool',des='Turn on if post contains HTML and shouldn\'t be formatted',prettyname='Don\'t Auto-Format',scope='general',sortorder='20' WHERE name='opt_preformatted';
INSERT IGNORE INTO logproplist (datatype, des, name, prettyname, scope, sortorder) VALUES ('char', 'Like opt_whoscreened: A = All, R = Remote needed (anonymous only), F = non-Friends, N = None, else use userprop.', 'opt_screening', 'Custom Screening Level', 'general', '45');
UPDATE logproplist SET datatype='char',des='Like opt_whoscreened: A = All, R = Remote needed (anonymous only), F = non-Friends, N = None, else use userprop.',prettyname='Custom Screening Level',scope='general',sortorder='45' WHERE name='opt_screening';
INSERT IGNORE INTO logproplist (datatype, des, name, prettyname, scope, sortorder) VALUES ('char', 'A keyword that should align to a defined picture', 'picture_keyword', 'Picture Keyword', 'general', '30');
UPDATE logproplist SET datatype='char',des='A keyword that should align to a defined picture',prettyname='Picture Keyword',scope='general',sortorder='30' WHERE name='picture_keyword';
INSERT IGNORE INTO logproplist (datatype, des, name, prettyname, scope, sortorder) VALUES ('num', 'Number of times this post has been edited.', 'revnum', 'Revision number', 'general', '99');
UPDATE logproplist SET datatype='num',des='Number of times this post has been edited.',prettyname='Revision number',scope='general',sortorder='99' WHERE name='revnum';
INSERT IGNORE INTO logproplist (datatype, des, name, prettyname, scope, sortorder) VALUES ('num', 'Unix time of the last edit', 'revtime', 'Revision time', 'general', '99');
UPDATE logproplist SET datatype='num',des='Unix time of the last edit',prettyname='Revision time',scope='general',sortorder='99' WHERE name='revtime';
INSERT IGNORE INTO logproplist (datatype, des, name, prettyname, scope, sortorder) VALUES ('char', 'Unique id of syndication item', 'syn_id', 'Syndicated item id', 'general', '99');
UPDATE logproplist SET datatype='char',des='Unique id of syndication item',prettyname='Syndicated item id',scope='general',sortorder='99' WHERE name='syn_id';
INSERT IGNORE INTO logproplist (datatype, des, name, prettyname, scope, sortorder) VALUES ('char', 'Original URL of syndication item', 'syn_link', 'Syndication item link URL', 'general', '99');
UPDATE logproplist SET datatype='char',des='Original URL of syndication item',prettyname='Syndication item link URL',scope='general',sortorder='99' WHERE name='syn_link';
INSERT IGNORE INTO logproplist (datatype, des, name, prettyname, scope, sortorder) VALUES ('char', 'Comma separated list of tags on the entry', 'taglist', 'Tag List', 'general', '101');
UPDATE logproplist SET datatype='char',des='Comma separated list of tags on the entry',prettyname='Tag List',scope='general',sortorder='101' WHERE name='taglist';
INSERT IGNORE INTO logproplist (datatype, des, name, prettyname, scope, sortorder) VALUES ('bool', 'True if text has 8-bit data that\'s not in UTF-8', 'unknown8bit', 'Unknown 8-bit text', 'general', '99');
UPDATE logproplist SET datatype='bool',des='True if text has 8-bit data that\'s not in UTF-8',prettyname='Unknown 8-bit text',scope='general',sortorder='99' WHERE name='unknown8bit';
INSERT IGNORE INTO priv_list (des, is_public, privcode, privname, scope) VALUES ('Allows a user to view paid accounts that are going to expire soon', '1', 'accountsexpiring', 'Accounts - Expiring', 'general');
UPDATE priv_list SET des='Allows a user to view paid accounts that are going to expire soon',is_public='1',privname='Accounts - Expiring',scope='general' WHERE privcode='accountsexpiring';
INSERT IGNORE INTO priv_list (des, is_public, privcode, privname, scope) VALUES ('Allows a user to grant or revoke privileges to/from other users. arg=Unique privcode that the user has access to grant/deny for, or \"*\" for all privileges.', '0', 'admin', 'Administer priviledges', 'general');
UPDATE priv_list SET des='Allows a user to grant or revoke privileges to/from other users. arg=Unique privcode that the user has access to grant/deny for, or \"*\" for all privileges.',is_public='0',privname='Administer priviledges',scope='general' WHERE privcode='admin';
INSERT IGNORE INTO priv_list (des, is_public, privcode, privname, scope) VALUES ('Allows a user to set an IP address as being allowed if it\'s listed as an open proxy.', '0', 'allowopenproxy', 'Allow Open Proxy', 'general');
UPDATE priv_list SET des='Allows a user to set an IP address as being allowed if it\'s listed as an open proxy.',is_public='0',privname='Allow Open Proxy',scope='general' WHERE privcode='allowopenproxy';
INSERT IGNORE INTO priv_list (des, is_public, privcode, privname, scope) VALUES ('Allows a user to access new features that are under development. arg=Feature codename', '1', 'betatest', 'Beta Test Features', 'general');
UPDATE priv_list SET des='Allows a user to access new features that are under development. arg=Feature codename',is_public='1',privname='Beta Test Features',scope='general' WHERE privcode='betatest';
INSERT IGNORE INTO priv_list (des, is_public, privcode, privname, scope) VALUES ('Allows a user to view information that isn\'t otherwise available.  All use is logged.  arg=Arg="*": can view everything, Arg="suspended": can view public posts in a suspended journal, Arg="styles": can see private styles.', '0', 'canview', 'View All Entries', 'general');
UPDATE priv_list SET des='Allows a user to view information that isn\'t otherwise available.  All use is logged.  arg=Arg="*": can view everything, Arg="suspended": can view public posts in a suspended journal, Arg="styles": can see private styles.',is_public='0',privname='View All Entries',scope='general' WHERE privcode='canview';
INSERT IGNORE INTO priv_list (des, is_public, privcode, privname, scope) VALUES ('Allows a user to change another user\'s journal type.', '1', 'changejournaltype', 'Change Journal Type', 'general');
UPDATE priv_list SET des='Allows a user to change another user\'s journal type.',is_public='1',privname='Change Journal Type',scope='general' WHERE privcode='changejournaltype';
INSERT IGNORE INTO priv_list (des, is_public, privcode, privname, scope) VALUES ('Allows a user to change the maintainer of a community.', '1', 'communityxfer', 'Community Maintainer Transfer', 'general');
UPDATE priv_list SET des='Allows a user to change the maintainer of a community.',is_public='1',privname='Community Maintainer Transfer',scope='general' WHERE privcode='communityxfer';
INSERT IGNORE INTO priv_list (des, is_public, privcode, privname, scope) VALUES ('Allows a user to delete comments from other journals. Only used in rare cases, like people posting other users\' phone numbers to be mean.', '1', 'deletetalk', 'Delete Comments', 'general');
UPDATE priv_list SET des='Allows a user to delete comments from other journals. Only used in rare cases, like people posting other users\' phone numbers to be mean.',is_public='1',privname='Delete Comments',scope='general' WHERE privcode='deletetalk';
INSERT IGNORE INTO priv_list (des, is_public, privcode, privname, scope) VALUES ('Allows a user to FTP files and have them copied over to the main site\'s document roots. An example argument would be: \"client/win32=files/bin/clients/win32\". arg=Unique path of the form \"devftppath=htdocpath\"', '1', 'dirsync', 'Directory Sync', 'general');
UPDATE priv_list SET des='Allows a user to FTP files and have them copied over to the main site\'s document roots. An example argument would be: \"client/win32=files/bin/clients/win32\". arg=Unique path of the form \"devftppath=htdocpath\"',is_public='1',privname='Directory Sync',scope='general' WHERE privcode='dirsync';
INSERT IGNORE INTO priv_list (des, is_public, privcode, privname, scope) VALUES ('Allows a user to add documents to the Frequently Asked Questions. arg=Unique faq category code that the privilege is applicable for, or \"*\" for all faq categories.', '1', 'faqadd', 'FAQ - Add', 'general');
UPDATE priv_list SET des='Allows a user to add documents to the Frequently Asked Questions. arg=Unique faq category code that the privilege is applicable for, or \"*\" for all faq categories.',is_public='1',privname='FAQ - Add',scope='general' WHERE privcode='faqadd';
INSERT IGNORE INTO priv_list (des, is_public, privcode, privname, scope) VALUES ('Allows a user to modify FAQ categories.', '1', 'faqcat', 'FAQ - Edit Categories', 'general');
UPDATE priv_list SET des='Allows a user to modify FAQ categories.',is_public='1',privname='FAQ - Edit Categories',scope='general' WHERE privcode='faqcat';
INSERT IGNORE INTO priv_list (des, is_public, privcode, privname, scope) VALUES ('Allows a user to edit documents in the Frequently Asked Questions. arg=Unique FAQ category code that the privilege is applicable for, or \"*\" for all faq categories', '1', 'faqedit', 'FAQ - Edit', 'general');
UPDATE priv_list SET des='Allows a user to edit documents in the Frequently Asked Questions. arg=Unique FAQ category code that the privilege is applicable for, or \"*\" for all faq categories',is_public='1',privname='FAQ - Edit',scope='general' WHERE privcode='faqedit';
INSERT IGNORE INTO priv_list (des, is_public, privcode, privname, scope) VALUES ('Allows a user to edit a static file in the main site\'s document include tree. arg=Unique file identifier, or \"*\" for all files', '1', 'fileedit', 'File Editing', 'general');
UPDATE priv_list SET des='Allows a user to edit a static file in the main site\'s document include tree. arg=Unique file identifier, or \"*\" for all files',is_public='1',privname='File Editing',scope='general' WHERE privcode='fileedit';
INSERT IGNORE INTO priv_list (des, is_public, privcode, privname, scope) VALUES ('Allows a user to find other users by different criteria. arg=Optional \"codetrace\", which allows the user to see someone\'s use of account codes.', '1', 'finduser', 'Find a user', 'general');
UPDATE priv_list SET des='Allows a user to find other users by different criteria. arg=Optional \"codetrace\", which allows the user to see someone\'s use of account codes.',is_public='1',privname='Find a user',scope='general' WHERE privcode='finduser';
INSERT IGNORE INTO priv_list (des, is_public, privcode, privname, scope) VALUES ('Allows a user to generate unlimited numbers of invite codes.', '1', 'gencodes', 'Generate Codes', 'general');
UPDATE priv_list SET des='Allows a user to generate unlimited numbers of invite codes.',is_public='1',privname='Generate Codes',scope='general' WHERE privcode='gencodes';
INSERT IGNORE INTO priv_list (des, is_public, privcode, privname, scope) VALUES ('Allows a user to grant another account a Permanent Account', '1', 'grantperm', 'Grant Permanent Account', 'general');
UPDATE priv_list SET des='Allows a user to grant another account a Permanent Account',is_public='1',privname='Grant Permanent Account',scope='general' WHERE privcode='grantperm';
INSERT IGNORE INTO priv_list (des, is_public, privcode, privname, scope) VALUES ('Allows a user to view data in the \"statushistory\" table for all users.  arg=Type of \"statushistory\" entries user can see, or no argument to see everything.', '1', 'historyview', 'View statushistory info', 'general');
UPDATE priv_list SET des='Allows a user to view data in the \"statushistory\" table for all users.  arg=Type of \"statushistory\" entries user can see, or no argument to see everything.',is_public='1',privname='View statushistory info',scope='general' WHERE privcode='historyview';
INSERT IGNORE INTO priv_list (des, is_public, privcode, privname, scope) VALUES ('Allows a user to record payments for paid accounts.', '1', 'moneyenter', 'Money - Enter Payments', 'general');
UPDATE priv_list SET des='Allows a user to record payments for paid accounts.',is_public='1',privname='Money - Enter Payments',scope='general' WHERE privcode='moneyenter';
INSERT IGNORE INTO priv_list (des, is_public, privcode, privname, scope) VALUES ('Allows a user to search for payments entered.', '1', 'moneysearch', 'Money - Search for payments', 'general');
UPDATE priv_list SET des='Allows a user to search for payments entered.',is_public='1',privname='Money - Search for payments',scope='general' WHERE privcode='moneysearch';
INSERT IGNORE INTO priv_list (des, is_public, privcode, privname, scope) VALUES ('Allows a user to see details about incoming money.', '1', 'moneyview', 'Money - View Detailed Records', 'general');
UPDATE priv_list SET des='Allows a user to see details about incoming money.',is_public='1',privname='Money - View Detailed Records',scope='general' WHERE privcode='moneyview';
INSERT IGNORE INTO priv_list (des, is_public, privcode, privname, scope) VALUES ('Allows a user to edit mood themes and make themes public.', '1', 'moodthememanager', 'Mood Themes - Manager', 'general');
UPDATE priv_list SET des='Allows a user to edit mood themes and make themes public.',is_public='1',privname='Mood Themes - Manager',scope='general' WHERE privcode='moodthememanager';
INSERT IGNORE INTO priv_list (des, is_public, privcode, privname, scope) VALUES ('Allows a user to delete all email addresses from an account.', '1', 'reset_email', 'Reset User Email Address', 'general');
UPDATE priv_list SET des='Allows a user to delete all email addresses from an account.',is_public='1',privname='Reset User Email Address',scope='general' WHERE privcode='reset_email';
INSERT IGNORE INTO priv_list (des, is_public, privcode, privname, scope) VALUES ('Allows a user to reset the password to an account', '1', 'reset_password', 'Reset User Password', 'general');
UPDATE priv_list SET des='Allows a user to reset the password to an account',is_public='1',privname='Reset User Password',scope='general' WHERE privcode='reset_password';
INSERT IGNORE INTO priv_list (des, is_public, privcode, privname, scope) VALUES ('Allows a user to edit the database schema documentation.', '1', 'schemadoc', 'Edit Schema Documentation', 'general');
UPDATE priv_list SET des='Allows a user to edit the database schema documentation.',is_public='1',privname='Edit Schema Documentation',scope='general' WHERE privcode='schemadoc';
INSERT IGNORE INTO priv_list (des, is_public, privcode, privname, scope) VALUES ('Allows a user to add or remove people\'s access to post in a shared journal. arg=Community/shared journal username that\'s being administrated, or \"*\" for all journals.', '0', 'sharedjournal', 'Shared Journal - Admin', 'general');
UPDATE priv_list SET des='Allows a user to add or remove people\'s access to post in a shared journal. arg=Community/shared journal username that\'s being administrated, or \"*\" for all journals.',is_public='0',privname='Shared Journal - Admin',scope='general' WHERE privcode='sharedjournal';
INSERT IGNORE INTO priv_list (des, is_public, privcode, privname, scope) VALUES ('Allows a user to view/adjust certain critical site settings. arg=Unique keyword that user has access to view', '1', 'siteadmin', 'Administer Site', 'general');
UPDATE priv_list SET des='Allows a user to view/adjust certain critical site settings. arg=Unique keyword that user has access to view',is_public='1',privname='Administer Site',scope='general' WHERE privcode='siteadmin';
INSERT IGNORE INTO priv_list (des, is_public, privcode, privname, scope) VALUES ('Allows a user to change the summary on support requests. arg=Unique support category', '1', 'supportchangesummary', 'Support - Change Summaries', 'general');
UPDATE priv_list SET des='Allows a user to change the summary on support requests. arg=Unique support category',is_public='1',privname='Support - Change Summaries',scope='general' WHERE privcode='supportchangesummary';
INSERT IGNORE INTO priv_list (des, is_public, privcode, privname, scope) VALUES ('Allows a user to close old support requests that other users haven\'t closed themselves. arg=Unique support category that the user has permission to close in.', '1', 'supportclose', 'Support - Close Requests', 'general');
UPDATE priv_list SET des='Allows a user to close old support requests that other users haven\'t closed themselves. arg=Unique support category that the user has permission to close in.',is_public='1',privname='Support - Close Requests',scope='general' WHERE privcode='supportclose';
INSERT IGNORE INTO priv_list (des, is_public, privcode, privname, scope) VALUES ('Allows a user to delete duplicate or fake support requests.', '1', 'supportdelete', 'Support - Delete Requests', 'general');
UPDATE priv_list SET des='Allows a user to delete duplicate or fake support requests.',is_public='1',privname='Support - Delete Requests',scope='general' WHERE privcode='supportdelete';
INSERT IGNORE INTO priv_list (des, is_public, privcode, privname, scope) VALUES ('Allows a user to approve screened responses, change request summaries and answer and comment unscreened. arg=Unique Support Category', '1', 'supporthelp', 'Support - Manage Requests', 'general');
UPDATE priv_list SET des='Allows a user to approve screened responses, change request summaries and answer and comment unscreened. arg=Unique Support Category',is_public='1',privname='Support - Manage Requests',scope='general' WHERE privcode='supporthelp';
INSERT IGNORE INTO priv_list (des, is_public, privcode, privname, scope) VALUES ('Allows a user to make internal comments on support requests. arg=Unique support category', '1', 'supportmakeinternal', 'Support - Make Internal Comments', 'general');
UPDATE priv_list SET des='Allows a user to make internal comments on support requests. arg=Unique support category',is_public='1',privname='Support - Make Internal Comments',scope='general' WHERE privcode='supportmakeinternal';
INSERT IGNORE INTO priv_list (des, is_public, privcode, privname, scope) VALUES ('Allows a user to move support requests to different categories and to mark requests as still needing help. The supportmakeinternal privilege is required. arg=Unique support category', '1', 'supportmovetouch', 'Support - Move and Touch Requests', 'general');
UPDATE priv_list SET des='Allows a user to move support requests to different categories and to mark requests as still needing help. The supportmakeinternal privilege is required. arg=Unique support category',is_public='1',privname='Support - Move and Touch Requests',scope='general' WHERE privcode='supportmovetouch';
INSERT IGNORE INTO priv_list (des, is_public, privcode, privname, scope) VALUES ('Allows a user to read support requests in private categories. arg=Unique support category', '1', 'supportread', 'Support - Read Requests', 'general');
UPDATE priv_list SET des='Allows a user to read support requests in private categories. arg=Unique support category',is_public='1',privname='Support - Read Requests',scope='general' WHERE privcode='supportread';
INSERT IGNORE INTO priv_list (des, is_public, privcode, privname, scope) VALUES ('Allows a user to view internal comments on support requests. arg=Unique support category', '1', 'supportviewinternal', 'Support - View Internal Comments', 'general');
UPDATE priv_list SET des='Allows a user to view internal comments on support requests. arg=Unique support category',is_public='1',privname='Support - View Internal Comments',scope='general' WHERE privcode='supportviewinternal';
INSERT IGNORE INTO priv_list (des, is_public, privcode, privname, scope) VALUES ('Allows a user to read screened responses on support requests. arg=Unique support category', '1', 'supportviewscreened', 'Support - See Screened Responses', 'general');
UPDATE priv_list SET des='Allows a user to read screened responses on support requests. arg=Unique support category',is_public='1',privname='Support - See Screened Responses',scope='general' WHERE privcode='supportviewscreened';
INSERT IGNORE INTO priv_list (des, is_public, privcode, privname, scope) VALUES ('Allows a user to suspend or unsuspend user accounts. Used by the Abuse Team.', '0', 'suspend', 'Suspend accounts', 'general');
UPDATE priv_list SET des='Allows a user to suspend or unsuspend user accounts. Used by the Abuse Team.',is_public='0',privname='Suspend accounts',scope='general' WHERE privcode='suspend';
INSERT IGNORE INTO priv_list (des, is_public, privcode, privname, scope) VALUES ('Allows editing settings of syndicated journal that shouldn\'t be editable by users.', '0', 'syn_edit', 'Edit Syndicated Settings', 'general');
UPDATE priv_list SET des='Allows editing settings of syndicated journal that shouldn\'t be editable by users.',is_public='0',privname='Edit Syndicated Settings',scope='general' WHERE privcode='syn_edit';
INSERT IGNORE INTO priv_list (des, is_public, privcode, privname, scope) VALUES ('Allows a user to modify bans with the sysban mechanism.  arg=A specific ban type the user can modify, or \"*\" for all ban type.', '0', 'sysban', 'Modify System Bans', 'general');
UPDATE priv_list SET des='Allows a user to modify bans with the sysban mechanism.  arg=A specific ban type the user can modify, or \"*\" for all ban type.',is_public='0',privname='Modify System Bans',scope='general' WHERE privcode='sysban';
INSERT IGNORE INTO priv_list (des, is_public, privcode, privname, scope) VALUES ('Allows a user to add/approve/deny new topics within a category. arg=Unique category number that the user has access in, or \"*\" for all categories.', '1', 'topicaddtopic', 'Topic Dir - Add Topics', 'general');
UPDATE priv_list SET des='Allows a user to add/approve/deny new topics within a category. arg=Unique category number that the user has access in, or \"*\" for all categories.',is_public='1',privname='Topic Dir - Add Topics',scope='general' WHERE privcode='topicaddtopic';
INSERT IGNORE INTO priv_list (des, is_public, privcode, privname, scope) VALUES ('Allows a user to have all access to administrative functions of the topic directory. They can then create/edit topics, create/edit topic categories, etc.', '1', 'topicmanager', 'Topic Dir - Manager', 'general');
UPDATE priv_list SET des='Allows a user to have all access to administrative functions of the topic directory. They can then create/edit topics, create/edit topic categories, etc.',is_public='1',privname='Topic Dir - Manager',scope='general' WHERE privcode='topicmanager';
INSERT IGNORE INTO priv_list (des, is_public, privcode, privname, scope) VALUES ('Allows a user to approve or deny entries that are submitted to the directory. arg=Unique category number that the user has access in, or \"*\" for all categories', '1', 'topicscreencat', 'Topic Dir - Screen Submissions', 'general');
UPDATE priv_list SET des='Allows a user to approve or deny entries that are submitted to the directory. arg=Unique category number that the user has access in, or \"*\" for all categories',is_public='1',privname='Topic Dir - Screen Submissions',scope='general' WHERE privcode='topicscreencat';
INSERT IGNORE INTO priv_list (des, is_public, privcode, privname, scope) VALUES ('Allows a user to edit site text in a given language. arg=Unique language code, optionally appended by |domainid.domaincode', '1', 'translate', 'Translate/Update Text', 'general');
UPDATE priv_list SET des='Allows a user to edit site text in a given language. arg=Unique language code, optionally appended by |domainid.domaincode',is_public='1',privname='Translate/Update Text',scope='general' WHERE privcode='translate';
INSERT IGNORE INTO ratelist (des, name) VALUES ('Logged when wrong username/password is used.', 'failed_login');
INSERT IGNORE INTO ratelist (des, name) VALUES ('Logged whenever user posts (to any journal)', 'post');
INSERT IGNORE INTO ratelist (des, name) VALUES ('Logged when a forgotten password or username e-mail is requested', 'lostinfo');
UPDATE ratelist SET des='Logged when wrong username/password is used.',name='failed_login' WHERE rlid=NULL;
UPDATE ratelist SET des='Logged whenever user posts (to any journal)',name='post' WHERE rlid=NULL;
UPDATE ratelist SET des='Logged when a forgotten password or username e-mail is requested',name='lostinfo' WHERE rlid=NULL;
REPLACE INTO schemacols (colname, des, tablename) VALUES ('FIPS', '??', 'zips');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('Name', 'Name of city', 'zips');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('State', 'State', 'zips');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('aaid', 'Primary key for each authaction.', 'authactions');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('acid', 'Account code ID.  Primary key.', 'acctcode');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('acid', 'The account code ID from [dbtable[acctcode]].', 'acctpay');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('acid', 'The resultant acid code in table [dbtable[acctcode]].', 'acctinvite');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('action', 'The action command name to be run when the authaction is confirmed (clicked/etc)', 'authactions');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('alloc', '??', 'zips');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('answer', 'The answer text, in plaintext.', 'faq');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('area', 'The type of usage: \"L\" for log, \"T\" for talk, \"B\" for bio, \"P\" for pic.', 'dudata');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('areaid', 'Unique ID within area, or \'0\' if area has no ids (like bio)', 'dudata');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('arg1', 'Optional argument to accompany the action.', 'authactions');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('args', 'A URL string of arguments.', 'cmdbuffer');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('auth', 'Five randomly generated bytes.  This, along with the acid encoded, make up the invite code.', 'acctcode');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('authcode', 'Random characters (the confirmation bit)', 'authactions');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('bgcolor', 'The background color used in the friends view events.', 'friends');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('bytes', 'Number of bytes item takes up.', 'dudata');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('cbid', 'unique id', 'cmdbuffer');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('city', 'City name', 'zip');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('client', 'Client string, of form Platform-Name/Version.  See login mode of protocol docs.', 'clients');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('clientid', 'Clientid of client from [dbtable[clients]] table.', 'clientusage');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('clientid', 'Primary key.  Auto-generated for each new client name.', 'clients');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('cmd', 'Text of the command name.', 'cmdbuffer');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('color', 'The #rrggbb color (or one of the constants)', 'themedata');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('coltype', 'The color code, references [dbtable[themecoltypes]].', 'themedata');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('curr', 'The current weighting value for this dbid+role.', 'dbweights');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('datatype', 'Either \"char\" for text data, \"num\" for an integer, or \"bool\" for a 1/0 value.', 'userproplist');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('dateadd', 'Date code was create.', 'acctinvite');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('datecreate', 'Date the auth code was created.', 'authactions');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('dateins', 'The date the search was made.', 'dirsearchres2');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('dateview', 'The time of the viewing.', 'faquses');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('dbid', 'The dbid from [dbtable[dbinfo]].', 'dbweights');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('dbid', 'Unique database ID.  Recommended to use the mysql server-id value.', 'dbinfo');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('des', 'A description of the table, for use in the schema browser, and in the LJ manual.', 'schematables');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('des', 'Description of the meta-data, for use by developers (humans?)', 'userproplist');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('digest', 'The md5 digest of the event.  Concatenate everything important and run it through perl\'s md5_hex (or MySQL\'s md5)', 'duplock');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('domain', 'domain name, without any leading http:// or www.  Example:  foo.com', 'domains');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('dupid', 'The unique ID this action generated the first time.', 'duplock');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('faqcat', 'The name of the main category the FAQ item belongs to. Is the index to [dbtable[faqcat]]', 'faq');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('faqid', 'The faqid of the [dbtable[faq]] item which was viewed.', 'faquses');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('faqid', 'The unique id number of the FAQ.', 'faq');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('fdsn', 'The DBI connection DSN, username, then password, delimited by pipe characters.', 'dbinfo');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('fgcolor', 'The foreground color used in the friends view events.', 'friends');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('friendid', 'The [dbtable[user]].userid of the friend to watch/trust.', 'friends');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('groupmask', 'A bitmask of 1 (1 << 0) OR\'ed with (1 << [dbtable[friendgroup]].groupnum) for each friendgroup this friend belongs to.', 'friends');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('groupname', 'Name given to the friend group.', 'friendgroup');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('groupnum', 'The group number. Can be 1-30.', 'friendgroup');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('incname', 'The filename of the include file.', 'includetext');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('inctext', 'The text contents of the include file.', 'includetext');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('instime', 'The time the action first completed.', 'duplock');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('instime', 'The time the query was buffered. Not used by applications, but useful for debugging/humans.', 'cmdbuffer');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('intcount', 'The number of users listing the interest.', 'interests');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('interest', 'The text of the interest.', 'interests');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('intid', 'Unique id assigned to the interest.', 'interests');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('is_public', 'Determines if the group can be seen by anyone, or just the owner.', 'friendgroup');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('journalid', 'Journal id the command affects. This is so that all of a user\'s queued actions can be run before that user is potentially movedbetween clusters.', 'cmdbuffer');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('lastitemid', 'Itemid of their last post (see [dbtable[log]]/[dbtable[log2]])', 'userusage');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('lastlogin', 'The most recent time this user used this client.', 'clientusage');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('lastmodtime', 'The date the FAQ item was last modified.', 'faq');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('lastmoduserid', 'The userid of the [dbtable[user]] who last modified the FAQ item.', 'faq');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('lat', 'Latitude', 'zips');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('lon', 'Longitude', 'zips');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('masterid', 'The dbid which this server replicates from, or 0 for the master server.  Note: only one server should have a master of 0!', 'dbinfo');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('membership', 'Can people join without being invited?', 'community');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('name', 'A unique name of the server.', 'dbinfo');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('name', 'Name of property, matching [a-z0-9_]+.  Intended for use by code and clients.', 'userproplist');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('norm', 'The normal weighting value for this dbid+role.', 'dbweights');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('oldvalue', 'The old value of the item.', 'infohistory');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('other', 'Optional note space.', 'infohistory');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('payid', 'The payment ID from [dbtable[payments]].', 'acctpay');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('pop1990', 'Population in 1990.', 'zips');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('postlevel', 'Who can post?  Members only, or a select group.  \"screened\" is not yet used.', 'community');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('prettyname', 'Mixed case pretty name with spaces and punctuation.  Indeded for use by humans.', 'userproplist');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('public_browsable', 'If set to 1, users can view the data in this table from the web.  (lookup tables only)', 'schematables');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('qdigest', 'An MD5sum of the SQL search query.', 'dirsearchres2');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('question', 'The question text, in plaintext.', 'faq');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('rcptid', 'Userid of recipient, or 0 if code is unused.', 'acctcode');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('realm', 'The area of the site the lock is being provided for.', 'duplock');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('reason', 'Reason code for generating invite code.  See invite/gen.bml', 'acctinvite');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('redist_mode', 'Determines if data from this table is made available in the LJ source distribution.  And if so, is it to be updated with upgrades (REPLACE INTO) or just inserted once.', 'schematables');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('reid', 'Realm ID.  If you don\'t need it (most don\'t), use 0.  Example: for comment realm, reid is the itemid being replied to.', 'duplock');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('role', 'The database role type:  master, slave, clusterN, clusterNslave, etc...  See other documentation.', 'dbweights');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('rootfdsn', 'The fdsn to connect as root, to do administrative stuff.', 'dbinfo');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('showbydefault', 'Unused.', 'friends');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('sortorder', 'The sorting number the questions are ordered by. Used while SELECT\'ing them.', 'faq');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('sortorder', 'The sorting order.', 'friendgroup');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('state', 'State code (see [dbtable[codes]] for how to turn this into a full state name)', 'zip');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('tablename', 'The name of the table being described.', 'schematables');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('themeid', 'Unique ID, references [dbtable[themelist]] table.', 'themedata');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('timechange', 'The time of the change.', 'infohistory');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('timecheck', 'unused.', 'userusage');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('timecreate', 'When the user created their journal.', 'userusage');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('timeupdate', 'When the user last updated their journal.', 'userusage');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('track', 'If the police or a court has contact us to track a user, we turn this on and activities are logged to the [dbtable[tracking]] table.', 'user');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('updatetime', 'The date it was last updated.', 'includetext');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('upropid', 'Unique id for this meta-data property.', 'userproplist');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('userid', 'Community\'s userid from the [dbtable[user]] table.', 'community');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('userid', 'The userid doing the action, or 0 if user is unknown (as in support realm)', 'duplock');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('userid', 'The userid of the [dbtable[user]] making the change.', 'infohistory');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('userid', 'The userid of the [dbtable[user]] who added the friend.', 'friends');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('userid', 'The userid of the [dbtable[user]] who this friends group belongs to.', 'friendgroup');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('userid', 'The userid of the remote [dbtable[user]] viewing the FAQ item.', 'faquses');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('userid', 'The userid the disk usage item belongs to.', 'dudata');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('userid', 'Userid of [dbtable[user]] that code was made for.', 'acctinvite');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('userid', 'Userid of [dbtable[user]] using client.', 'clientusage');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('userid', 'Userid of [dbtable[user]] we\'re verifying.', 'authactions');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('userid', 'Userid of [dbtable[user]] whose journal should be loaded.', 'domains');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('userid', 'Userid of [dbtable[user]].  One row in this table per user.', 'userusage');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('userid', 'Userid that can give this code.', 'acctcode');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('userids', 'List of matched userids for the query, comma separated.', 'dirsearchres2');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('what', 'Short name of the item being changed.', 'infohistory');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('zip', 'ZIP Code', 'zip');
REPLACE INTO schemacols (colname, des, tablename) VALUES ('zip', 'ZIP Code', 'zips');
REPLACE INTO schematables (des, public_browsable, redist_mode, redist_where, tablename) VALUES ('', '0', 'off', NULL, 'moods');
REPLACE INTO schematables (des, public_browsable, redist_mode, redist_where, tablename) VALUES ('', '0', 'off', NULL, 'user');
REPLACE INTO schematables (des, public_browsable, redist_mode, redist_where, tablename) VALUES ('', '0', 'replace', NULL, 'schemacols');
REPLACE INTO schematables (des, public_browsable, redist_mode, redist_where, tablename) VALUES ('A history log table for certain types of changes (like user e-mail changes). So the old values can be looked at by administrators or automatically retrieved.', '0', 'off', NULL, 'infohistory');
REPLACE INTO schematables (des, public_browsable, redist_mode, redist_where, tablename) VALUES ('Categories for support system', '1', 'insert', 'catkey=\'general\'', 'supportcat');
REPLACE INTO schematables (des, public_browsable, redist_mode, redist_where, tablename) VALUES ('Categories that frequently asked questions can be classified under', '1', 'off', NULL, 'faqcat');
REPLACE INTO schematables (des, public_browsable, redist_mode, redist_where, tablename) VALUES ('Clustered version of [dbtable[querybuffer]]. Uses specialized commands instead of general table locking', '0', 'off', NULL, 'cmdbuffer');
REPLACE INTO schematables (des, public_browsable, redist_mode, redist_where, tablename) VALUES ('Database table for storing special \"include\" files used in sections of the site (like the \"known issues\" box in support). Useful for keeping clusters of web servers in sync easier.', '0', 'off', NULL, 'includetext');
REPLACE INTO schematables (des, public_browsable, redist_mode, redist_where, tablename) VALUES ('Different color schemes.  Hopefully this will die when the new style system replaces the current one.', '1', 'replace', NULL, 'themelist');
REPLACE INTO schematables (des, public_browsable, redist_mode, redist_where, tablename) VALUES ('For LiveJournal installations with many databases, the database connection info, roles, and weightings can be stored in the database instead of the %LJ::DBINFO hash, for easier (web-based) management.\n', '0', 'off', NULL, 'dbinfo');
REPLACE INTO schematables (des, public_browsable, redist_mode, redist_where, tablename) VALUES ('Holds Frequently Asked Question information for the FAQ section of the support system. Alternate text can be loaded for the questions if available.', '0', 'off', NULL, 'faq');
REPLACE INTO schematables (des, public_browsable, redist_mode, redist_where, tablename) VALUES ('Holds the results of a directory search query. userids is either \"[searching]\" if a query is still running, or a list of userids if it is finished.', '0', 'off', NULL, 'dirsearchres2');
REPLACE INTO schematables (des, public_browsable, redist_mode, redist_where, tablename) VALUES ('Keep track of when [dbtable[user]]s did certain things.', '0', 'off', NULL, 'userusage');
REPLACE INTO schematables (des, public_browsable, redist_mode, redist_where, tablename) VALUES ('Keeps track of clients that access the protocol.\n\r\nWhenever the protocol encounters a new client, a new row (and thus a new clientid) is generated.', '0', 'off', NULL, 'clients');
REPLACE INTO schematables (des, public_browsable, redist_mode, redist_where, tablename) VALUES ('Keeps track of generated invite codes.', '0', 'off', NULL, 'acctinvite');
REPLACE INTO schematables (des, public_browsable, redist_mode, redist_where, tablename) VALUES ('Keeps track of properties of community accounts (which are just normal [dbtable[user]] accounts with some extra behavior)', '0', 'off', NULL, 'community');
REPLACE INTO schematables (des, public_browsable, redist_mode, redist_where, tablename) VALUES ('Keeps track of relationship between invite codes and payments.  Some people pay to join the site before they have an account, so their invite code carries with it the knowledge that it comes with paid time.', '0', 'off', NULL, 'acctpay');
REPLACE INTO schematables (des, public_browsable, redist_mode, redist_where, tablename) VALUES ('Keeps track of user-owned domain names, and which journals they map to when pointed at the LiveJournal installation\'s IP address.', '0', 'off', NULL, 'domains');
REPLACE INTO schematables (des, public_browsable, redist_mode, redist_where, tablename) VALUES ('Keeps track of valid invite codes and who has used them.  To see why they were made, see table [dbtable[acctinvite]].', '0', 'off', NULL, 'acctcode');
REPLACE INTO schematables (des, public_browsable, redist_mode, redist_where, tablename) VALUES ('Keeps track of when different users use which clients, for purposes of statistics.', '0', 'off', NULL, 'clientusage');
REPLACE INTO schematables (des, public_browsable, redist_mode, redist_where, tablename) VALUES ('List of different admin privileges that users can have.', '1', 'replace', NULL, 'priv_list');
REPLACE INTO schematables (des, public_browsable, redist_mode, redist_where, tablename) VALUES ('List of possible meta-data for comments.', '1', 'replace', NULL, 'talkproplist');
REPLACE INTO schematables (des, public_browsable, redist_mode, redist_where, tablename) VALUES ('List of possible meta-data for journal entries.', '1', 'replace', NULL, 'logproplist');
REPLACE INTO schematables (des, public_browsable, redist_mode, redist_where, tablename) VALUES ('List of possible meta-data on users.', '1', 'replace', NULL, 'userproplist');
REPLACE INTO schematables (des, public_browsable, redist_mode, redist_where, tablename) VALUES ('Lists the system colors themes available to users.', '0', 'replace', NULL, 'themedata');
REPLACE INTO schematables (des, public_browsable, redist_mode, redist_where, tablename) VALUES ('Lookup table for states, countries, languages, etc...', '1', 'replace', NULL, 'codes');
REPLACE INTO schematables (des, public_browsable, redist_mode, redist_where, tablename) VALUES ('Provides a place to record that an action has been done, so it doesn\'t get done a second time later by a user accidentally double-clicking a single-click button in their browser.\r\n\r\nThe idea is that the application should grab a write lock for both the table it\'s inserting into, and the duplock table.  Then, check the duplock table for a duplicate.  If it\'s already in there, unlock the tables and remember the dupid to tell the user (app should pretend it was the first time... don\'t show an error message!), or if it\'s not in there, put it in the table, and then put the resulting uniqueid from the table handler into the duplock table (as dupid).\r\n\r\nThe duplock table is purged every hour or so of all locks older than an hour.', '0', 'off', NULL, 'duplock');
REPLACE INTO schematables (des, public_browsable, redist_mode, redist_where, tablename) VALUES ('Table describing a user\'s friends groups. Friends groups are used to restrict who can see an individual post, or to filter the friends view.', '0', 'off', NULL, 'friendgroup');
REPLACE INTO schematables (des, public_browsable, redist_mode, redist_where, tablename) VALUES ('Table describing the different interests listed, and the number of users listing each interest.', '0', 'off', NULL, 'interests');
REPLACE INTO schematables (des, public_browsable, redist_mode, redist_where, tablename) VALUES ('Table describing users someone has listed as a \"friend\". Also details preferences on the friend item.', '0', 'off', NULL, 'friends');
REPLACE INTO schematables (des, public_browsable, redist_mode, redist_where, tablename) VALUES ('The [dbtable[dbinfo]] table keeps track of which databases exist.  This ones keeps track of each database\'s roles and weights.', '0', 'off', NULL, 'dbweights');
REPLACE INTO schematables (des, public_browsable, redist_mode, redist_where, tablename) VALUES ('This table is the documentation for the database tables.', '0', 'replace', NULL, 'schematables');
REPLACE INTO schematables (des, public_browsable, redist_mode, redist_where, tablename) VALUES ('Tracks user-based disk usage totals.', '0', 'off', NULL, 'dudata');
REPLACE INTO schematables (des, public_browsable, redist_mode, redist_where, tablename) VALUES ('Tracks viewings of the individual [dbtable[faq]]s from logged-in users.', '0', 'off', NULL, 'faquses');
REPLACE INTO schematables (des, public_browsable, redist_mode, redist_where, tablename) VALUES ('Unused as of this writing. Part of the \"subscription\" system.', '0', 'off', NULL, 'events');
REPLACE INTO schematables (des, public_browsable, redist_mode, redist_where, tablename) VALUES ('When authenticating certain actions, the server generates an authaction along with some random characters (the authcode) and emails the aaid+authcode to the user to confirm they actually got it.\n', '0', 'off', NULL, 'authactions');
REPLACE INTO schematables (des, public_browsable, redist_mode, redist_where, tablename) VALUES ('ZIP Code data for the United States that includes geographic coordinates.  Only used with a ljmaint script that generates marker files for use in making xplanet maps.  Most the LJ code uses the [dbtable[zip]] table instead.', '0', 'off', NULL, 'zips');
REPLACE INTO schematables (des, public_browsable, redist_mode, redist_where, tablename) VALUES ('ZIP Code table used to validate and auto-complete data that users enter about their location.  More information can be found in the redudant table [dbtable[zips]], which was imported later.', '0', 'off', NULL, 'zip');
REPLACE INTO schematables (des, public_browsable, redist_mode, redist_where, tablename) VALUES ('unused.  designed for the \"Adopt-a-newbie\" system, but never fully implemented.', '0', 'off', NULL, 'adopt');
REPLACE INTO schematables (des, public_browsable, redist_mode, redist_where, tablename) VALUES ('unused.  designed for the \"Adopt-a-newbie\" system, but never fully implemented.', '0', 'off', NULL, 'adoptlast');
REPLACE INTO schematables (des, public_browsable, redist_mode, redist_where, tablename) VALUES (NULL, '0', 'off', NULL, 'style');
REPLACE INTO schematables (des, public_browsable, redist_mode, redist_where, tablename) VALUES (NULL, '1', 'replace', NULL, 'ratelist');
INSERT IGNORE INTO supportcat (allow_screened, basepoints, catkey, catname, hide_helpers, is_selectable, no_autoreply, public_help, public_read, replyaddress, scope, sortorder) VALUES ('1', '1', 'general', 'General/Unknown', '0', '1', '0', '0', '1', NULL, 'general', '2');
UPDATE supportcat SET allow_screened='1',basepoints='1',catname='General/Unknown',hide_helpers='0',is_selectable='1',no_autoreply='0',public_help='0',public_read='1',replyaddress=NULL,scope='general',sortorder='2' WHERE catkey='general';
INSERT IGNORE INTO talkproplist (datatype, des, name, prettyname, scope) VALUES ('char', 'If the comment poster\'s account is deleted, this field gets added to all of their posts, so the UI can show something besides \'anonymous\' when posterid gets set to 0', 'deleted_poster', 'Username of deleted poster', 'general');
UPDATE talkproplist SET datatype='char',des='If the comment poster\'s account is deleted, this field gets added to all of their posts, so the UI can show something besides \'anonymous\' when posterid gets set to 0',prettyname='Username of deleted poster',scope='general' WHERE name='deleted_poster';
INSERT IGNORE INTO talkproplist (datatype, des, name, prettyname, scope) VALUES ('bool', 'true if auth\'d, false if not', 'guest_auth', 'URL of Guest Poster', 'general');
UPDATE talkproplist SET datatype='bool',des='true if auth\'d, false if not',prettyname='URL of Guest Poster',scope='general' WHERE name='guest_auth';
INSERT IGNORE INTO talkproplist (datatype, des, name, prettyname, scope) VALUES ('char', 'Anonymous comments with an email attached', 'guest_email', 'Email of Guest Poster', 'general');
UPDATE talkproplist SET datatype='char',des='Anonymous comments with an email attached',prettyname='Email of Guest Poster',scope='general' WHERE name='guest_email';
INSERT IGNORE INTO talkproplist (datatype, des, name, prettyname, scope) VALUES ('bool', 'If true, mangle guest email', 'guest_mangle_email', 'URL of Guest Poster', 'general');
UPDATE talkproplist SET datatype='bool',des='If true, mangle guest email',prettyname='URL of Guest Poster',scope='general' WHERE name='guest_mangle_email';
INSERT IGNORE INTO talkproplist (datatype, des, name, prettyname, scope) VALUES ('char', 'Anonymous comments with a name attached', 'guest_name', 'Name of Guest Poster', 'general');
UPDATE talkproplist SET datatype='char',des='Anonymous comments with a name attached',prettyname='Name of Guest Poster',scope='general' WHERE name='guest_name';
INSERT IGNORE INTO talkproplist (datatype, des, name, prettyname, scope) VALUES ('char', 'Anonymous comments with a URL attached', 'guest_url', 'Website of Guest Poster', 'general');
UPDATE talkproplist SET datatype='char',des='Anonymous comments with a URL attached',prettyname='Website of Guest Poster',scope='general' WHERE name='guest_url';
INSERT IGNORE INTO talkproplist (datatype, des, name, prettyname, scope) VALUES ('bool', 'Turn on if post contains HTML and shouldn\'t be formatted', 'opt_preformatted', 'Don\'t Auto-Format', 'general');
UPDATE talkproplist SET datatype='bool',des='Turn on if post contains HTML and shouldn\'t be formatted',prettyname='Don\'t Auto-Format',scope='general' WHERE name='opt_preformatted';
INSERT IGNORE INTO talkproplist (datatype, des, name, prettyname, scope) VALUES ('char', 'A keyword that should align to a defined picture', 'picture_keyword', 'Picture Keyword', 'general');
UPDATE talkproplist SET datatype='char',des='A keyword that should align to a defined picture',prettyname='Picture Keyword',scope='general' WHERE name='picture_keyword';
INSERT IGNORE INTO talkproplist (datatype, des, name, prettyname, scope) VALUES ('char', 'The poster\'s IP address, optionally logged.', 'poster_ip', 'Poster\'s IP address', 'general');
UPDATE talkproplist SET datatype='char',des='The poster\'s IP address, optionally logged.',prettyname='Poster\'s IP address',scope='general' WHERE name='poster_ip';
INSERT IGNORE INTO talkproplist (datatype, des, name, prettyname, scope) VALUES ('char', 'partial filename for subject icon to use', 'subjecticon', 'Subject Icon', 'general');
UPDATE talkproplist SET datatype='char',des='partial filename for subject icon to use',prettyname='Subject Icon',scope='general' WHERE name='subjecticon';
INSERT IGNORE INTO talkproplist (datatype, des, name, prettyname, scope) VALUES ('bool', 'True if text has 8-bit data that\'s not in UTF-8', 'unknown8bit', 'Unknown 8-bit text', 'general');
UPDATE talkproplist SET datatype='bool',des='True if text has 8-bit data that\'s not in UTF-8',prettyname='Unknown 8-bit text',scope='general' WHERE name='unknown8bit';
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#000000', 'page_back', '3');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#000000', 'page_back', '5');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#000000', 'page_text', '1');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#000000', 'page_text', '2');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#000000', 'page_text', '4');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#000000', 'page_text_em', '4');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#000000', 'page_text_title', '4');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#000000', 'strong_text', '1');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#000000', 'strong_text', '2');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#000000', 'strong_text', '3');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#000000', 'strong_text', '4');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#000000', 'stronger_text', '3');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#000000', 'stronger_text', '4');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#000000', 'weak_text', '1');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#000000', 'weak_text', '4');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#000050', 'page_link', '1');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#000050', 'page_link', '2');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#000066', 'weak_back', '11');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#000099', 'page_text_title', '11');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#0000FF', 'page_link', '4');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#0000FF', 'weak_text', '2');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#00025C', 'page_back', '12');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#00025C', 'stronger_back', '12');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#003333', 'weak_back', '8');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#005614', 'page_text_title', '7');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#005614', 'stronger_back', '7');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#005614', 'weak_text', '7');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#006005', 'page_text', '7');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#007537', 'page_text_em', '13');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#007537', 'strong_text', '13');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#007537', 'stronger_text', '13');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#007537', 'weak_text', '13');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#009007', 'page_link', '7');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#009900', 'page_text_title', '8');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#00A427', 'strong_back', '7');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#00B208', 'page_vlink', '7');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#00CC00', 'strong_text', '8');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#00FF00', 'page_text_em', '12');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#01059D', 'strong_back', '12');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#01059D', 'weak_back', '12');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#303030', 'stronger_back', '2');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#330099', 'strong_back', '11');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#336600', 'strong_back', '8');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#404040', 'weak_back', '5');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#500050', 'page_vlink', '1');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#500050', 'page_vlink', '2');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#606060', 'weak_back', '3');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#6633FF', 'page_link', '9');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#6666CC', 'stronger_back', '1');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#6F6F6F', 'stronger_back', '5');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#707070', 'strong_back', '5');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#7070FF', 'page_link', '5');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#7e587e', 'strong_text', '10');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#7e587e', 'weak_back', '10');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#800000', 'page_text_title', '6');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#800080', 'page_vlink', '4');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#8b1A1A', 'page_text_title', '1');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#8b1A1A', 'page_text_title', '2');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#900090', 'page_vlink', '6');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#909090', 'stronger_back', '4');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#990000', 'page_vlink', '8');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#99CC66', 'weak_text', '8');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#AD39FF', 'page_alink', '7');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#ADB1FF', 'page_text_title', '12');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#AFEFBE', 'weak_back', '7');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#C00000', 'page_text_em', '1');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#C00000', 'page_text_em', '2');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#C00090', 'page_link', '6');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#C0C0C0', 'page_link', '12');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#C0C0C0', 'strong_back', '4');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#C0C0FF', 'strong_back', '1');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#CC0000', 'page_text_title', '9');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#CC0000', 'strong_back', '9');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#CC6600', 'page_link', '8');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#CCCC00', 'page_text', '8');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#D5E6C4', 'stronger_back', '13');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#DD57FF', 'page_text_em', '7');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#DFFFDF', 'weak_back', '2');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#E0E0E0', 'weak_back', '4');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#E44545', 'page_alink', '13');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#E44545', 'page_link', '13');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#E44545', 'page_vlink', '13');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#EEEEFF', 'weak_back', '1');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FA0029', 'stronger_back', '6');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FBE3E3', 'weak_back', '13');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FCDDFF', 'strong_text', '12');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FCDDFF', 'weak_text', '12');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FEFFBB', 'page_text', '12');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FF0000', 'page_alink', '4');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FF0000', 'page_alink', '5');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FF0000', 'page_alink', '6');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FF0000', 'page_text_em', '6');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FF0000', 'weak_text', '6');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FF00C0', 'page_alink', '1');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FF00C0', 'page_alink', '2');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FF133A', 'page_text', '6');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FF33FF', 'page_vlink', '9');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FF6982', 'strong_back', '6');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FF70FF', 'page_vlink', '5');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FF8B8B', 'stronger_text', '12');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FF9900', 'strong_text', '9');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FF9900', 'stronger_text', '9');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FF9900', 'weak_back', '9');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FFC000', 'page_text_em', '3');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FFC1CB', 'weak_back', '6');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FFCBCB', 'page_alink', '12');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FFCBCB', 'page_vlink', '12');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FFCC00', 'page_back', '9');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FFCC00', 'page_text_em', '8');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FFCC00', 'stronger_back', '9');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FFD000', 'page_link', '3');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FFD040', 'page_vlink', '3');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FFFF00', 'page_alink', '3');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FFFF00', 'stronger_back', '3');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FFFF30', 'strong_back', '3');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FFFFC0', 'strong_back', '2');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FFFFDF', 'page_back', '2');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FFFFFF', 'page_back', '1');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FFFFFF', 'page_back', '4');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FFFFFF', 'page_back', '6');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FFFFFF', 'page_back', '7');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FFFFFF', 'page_text', '3');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FFFFFF', 'page_text', '5');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FFFFFF', 'page_text_em', '5');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FFFFFF', 'page_text_title', '3');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FFFFFF', 'page_text_title', '5');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FFFFFF', 'strong_text', '5');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FFFFFF', 'strong_text', '6');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FFFFFF', 'strong_text', '7');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FFFFFF', 'stronger_text', '1');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FFFFFF', 'stronger_text', '2');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FFFFFF', 'stronger_text', '5');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FFFFFF', 'stronger_text', '6');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FFFFFF', 'stronger_text', '7');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FFFFFF', 'weak_text', '3');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#FFFFFF', 'weak_text', '5');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#b93b8f', 'page_back', '10');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#b93b8f', 'stronger_text', '10');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#c38ec7', 'strong_back', '10');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#cc33ff', 'page_alink', '11');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#cc33ff', 'page_vlink', '11');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#d0d0d0', 'page_text_em', '10');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#e6a9ec', 'page_text_title', '10');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#e6a9ec', 'page_vlink', '10');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#eafeff', 'page_back', '11');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#f9b7ff', 'page_alink', '10');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#f9b7ff', 'page_text', '10');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#f9b7ff', 'stronger_back', '10');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('#f9b7ff', 'weak_text', '10');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('Black', 'page_text', '11');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('Black', 'page_text_em', '11');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('Black', 'stronger_text', '11');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('Red', 'page_link', '11');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('White', 'strong_text', '11');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('White', 'stronger_back', '11');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('White', 'weak_text', '11');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('black', 'page_back', '8');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('black', 'page_text', '13');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('black', 'page_text', '9');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('black', 'page_text_title', '13');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('black', 'stronger_back', '8');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('black', 'stronger_text', '8');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('black', 'weak_text', '9');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('blue', 'page_alink', '8');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('blue', 'page_text_em', '9');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('green', 'page_alink', '9');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('white', 'page_back', '13');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('white', 'page_link', '10');
REPLACE INTO themedata (color, coltype, themeid) VALUES ('white', 'strong_back', '13');
REPLACE INTO themelist (name, themeid) VALUES ('Black on White w/ light grays', '4');
REPLACE INTO themelist (name, themeid) VALUES ('Blues', '11');
REPLACE INTO themelist (name, themeid) VALUES ('Bumblebee', '3');
REPLACE INTO themelist (name, themeid) VALUES ('Foresty Nature Kinda', '8');
REPLACE INTO themelist (name, themeid) VALUES ('Leprechaun', '7');
REPLACE INTO themelist (name, themeid) VALUES ('MysticBlue', '12');
REPLACE INTO themelist (name, themeid) VALUES ('Pink & Gray', '10');
REPLACE INTO themelist (name, themeid) VALUES ('Soft Blues and White (Classic)', '1');
REPLACE INTO themelist (name, themeid) VALUES ('Supernova', '9');
REPLACE INTO themelist (name, themeid) VALUES ('Valentine\'s Day', '6');
REPLACE INTO themelist (name, themeid) VALUES ('Watermelon', '13');
REPLACE INTO themelist (name, themeid) VALUES ('White on Black w/ dark grays', '5');
REPLACE INTO themelist (name, themeid) VALUES ('Yellow/Green Pastels', '2');
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('0', 'char', 'AOL IM ScreenName', '1', '1', 'aolim', 'AOL Instant Messanger', 'general');
UPDATE userproplist SET cldversion='0',datatype='char',des='AOL IM ScreenName',indexed='1',multihomed='1',prettyname='AOL Instant Messanger',scope='general' WHERE name='aolim';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('0', 'num', 'The ID of the blob cluster user\'s media resides on.', '1', '0', 'blob_clusterid', 'Blob Cluster ID', 'general');
UPDATE userproplist SET cldversion='0',datatype='num',des='The ID of the blob cluster user\'s media resides on.',indexed='1',multihomed='0',prettyname='Blob Cluster ID',scope='general' WHERE name='blob_clusterid';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', 'LJ lang code in ml_langs', '1', '0', 'browselang', 'Language to browse with', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='LJ lang code in ml_langs',indexed='1',multihomed='0',prettyname='Language to browse with',scope='general' WHERE name='browselang';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', 'City lived in.', '1', '0', 'city', 'City', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='City lived in.',indexed='1',multihomed='0',prettyname='City',scope='general' WHERE name='city';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', '2 letter country code', '1', '0', 'country', 'Country', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='2 letter country code',indexed='1',multihomed='0',prettyname='Country',scope='general' WHERE name='country';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'bool', 'Used for large communities to prevent loading and displaying the complete list of members', '0', '0', 'dont_load_members', 'Don\'t load membership information', 'general');
UPDATE userproplist SET cldversion='4',datatype='bool',des='Used for large communities to prevent loading and displaying the complete list of members',indexed='0',multihomed='0',prettyname='Don\'t load membership information',scope='general' WHERE name='dont_load_members';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', 'On each postevent, the dupsig is checked and updated to prevent accidental duplicate posts', '0', '0', 'dupsig_post', 'Duplicate signature for last post', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='On each postevent, the dupsig is checked and updated to prevent accidental duplicate posts',indexed='0',multihomed='0',prettyname='Duplicate signature for last post',scope='general' WHERE name='dupsig_post';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', 'Comma separated list of email addresses allowed to send mail via gateway', '0', '0', 'emailpost_allowfrom', 'Allowed addresses to post via email', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='Comma separated list of email addresses allowed to send mail via gateway',indexed='0',multihomed='0',prettyname='Allowed addresses to post via email',scope='general' WHERE name='emailpost_allowfrom';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', 'Numeric or alpha PIN used for posting via email gateway', '0', '0', 'emailpost_pin', 'PIN for email posting', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='Numeric or alpha PIN used for posting via email gateway',indexed='0',multihomed='0',prettyname='PIN for email posting',scope='general' WHERE name='emailpost_pin';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', 'Location of External FOAF file', '0', '0', 'external_foaf_url', 'FOAF address', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='Location of External FOAF file',indexed='0',multihomed='0',prettyname='FOAF address',scope='general' WHERE name='external_foaf_url';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', 'Base Title of Friends Page', '0', '0', 'friendspagetitle', 'Friends Page Title', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='Base Title of Friends Page',indexed='0',multihomed='0',prettyname='Friends Page Title',scope='general' WHERE name='friendspagetitle';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', 'M: male, F: female, U: unspecified', '1', '0', 'gender', 'Gender', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='M: male, F: female, U: unspecified',indexed='1',multihomed='0',prettyname='Gender',scope='general' WHERE name='gender';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', 'How the user heard about LiveJournal', '0', '0', 'howhear', 'How heard about LiveJouranl', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='How the user heard about LiveJournal',indexed='0',multihomed='0',prettyname='How heard about LiveJouranl',scope='general' WHERE name='howhear';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('0', 'char', 'ICQ Number', '1', '1', 'icq', 'ICQ', 'general');
UPDATE userproplist SET cldversion='0',datatype='char',des='ICQ Number',indexed='1',multihomed='1',prettyname='ICQ',scope='general' WHERE name='icq';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'blobchar', 'Packed blob of a user\'s interest ids (4 bytes per id)', '1', '0', 'interest_ids_blob', 'Interest IDs blob', 'general');
UPDATE userproplist SET cldversion='4',datatype='blobchar',des='Packed blob of a user\'s interest ids (4 bytes per id)',indexed='1',multihomed='0',prettyname='Interest IDs blob',scope='general' WHERE name='interest_ids_blob';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('0', 'char', 'Jabber address (username@server)', '1', '1', 'jabber', 'Jabber Address', 'general');
UPDATE userproplist SET cldversion='0',datatype='char',des='Jabber address (username@server)',indexed='1',multihomed='1',prettyname='Jabber Address',scope='general' WHERE name='jabber';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', 'Domain which will load user\'s journal', '0', '0', 'journaldomain', 'Domain Alias', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='Domain which will load user\'s journal',indexed='0',multihomed='0',prettyname='Domain Alias',scope='general' WHERE name='journaldomain';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', 'Subtitle of Journal', '0', '0', 'journalsubtitle', 'Journal Subtitle', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='Subtitle of Journal',indexed='0',multihomed='0',prettyname='Journal Subtitle',scope='general' WHERE name='journalsubtitle';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', 'Base Title of Journal', '0', '0', 'journaltitle', 'Journal Title', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='Base Title of Journal',indexed='0',multihomed='0',prettyname='Journal Title',scope='general' WHERE name='journaltitle';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', 'Comma separated:  Unix time user agreed to the Terms of Service, revision number', '0', '1', 'legal_tosagree', 'Agreed to Terms of Service', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='Comma separated:  Unix time user agreed to the Terms of Service, revision number',indexed='0',multihomed='1',prettyname='Agreed to Terms of Service',scope='general' WHERE name='legal_tosagree';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'num', 'Encoding in which to mail comments to the user. Defaults to UTF-8.', '0', '0', 'mailencoding', 'Mail Encoding', 'general');
UPDATE userproplist SET cldversion='4',datatype='num',des='Encoding in which to mail comments to the user. Defaults to UTF-8.',indexed='0',multihomed='0',prettyname='Mail Encoding',scope='general' WHERE name='mailencoding';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'bool', '1: This community is moderated', '0', '0', 'moderated', 'Moderation status', 'general');
UPDATE userproplist SET cldversion='4',datatype='bool',des='1: This community is moderated',indexed='0',multihomed='0',prettyname='Moderation status',scope='general' WHERE name='moderated';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('0', 'char', 'MSN Username', '1', '1', 'msn', 'MSN Username', 'general');
UPDATE userproplist SET cldversion='0',datatype='char',des='MSN Username',indexed='1',multihomed='1',prettyname='MSN Username',scope='general' WHERE name='msn';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', 'Time (user-side) of the user\'s last entry in their personal journal', '0', '0', 'newesteventtime', 'Newest event time', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='Time (user-side) of the user\'s last entry in their personal journal',indexed='0',multihomed='0',prettyname='Newest event time',scope='general' WHERE name='newesteventtime';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', 'Minimal security for new events; values are: public, private or friends', '0', '0', 'newpost_minsecurity', 'Minimal Security', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='Minimal security for new events; values are: public, private or friends',indexed='0',multihomed='0',prettyname='Minimal Security',scope='general' WHERE name='newpost_minsecurity';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'bool', 'True if this community allows non-member posting access', '0', '0', 'nonmember_posting', 'Non-Member posting access', 'general');
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'bool', 'If true, mail to user\'s site email address isn\'t forwarded to their real address.', '0', '0', 'no_mail_alias', 'Disable site e-mail alias', 'local');
UPDATE userproplist SET cldversion='4',datatype='bool',des='If true, mail to user\'s site email address isn\'t forwarded to their real address.',indexed='0',multihomed='0',prettyname='Disable site e-mail alias',scope='local' WHERE name='no_mail_alias';
UPDATE userproplist SET cldversion='4',datatype='bool',des='True if this community allows non-member posting access',indexed='0',multihomed='0',prettyname='Non-Member posting access',scope='general' WHERE name='nonmember_posting';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('0', 'bool', '0: don\'t get birthday reminder mail, 1: do get birthday reminder mail', '1', '0', 'opt_bdaymail', 'Get Birthday Reminders', 'general');
UPDATE userproplist SET cldversion='0',datatype='bool',des='0: don\'t get birthday reminder mail, 1: do get birthday reminder mail',indexed='1',multihomed='0',prettyname='Get Birthday Reminders',scope='general' WHERE name='opt_bdaymail';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'bool', '1: don\'t allow robots, 0: do', '1', '0', 'opt_blockrobots', 'Block Robots & Spiders', 'general');
UPDATE userproplist SET cldversion='4',datatype='bool',des='1: don\'t allow robots, 0: do',indexed='1',multihomed='0',prettyname='Block Robots & Spiders',scope='general' WHERE name='opt_blockrobots';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', 'Y = send email, else don\'t.', '0', '0', 'opt_comminvitemail', 'Get Emails for Community Invites', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='Y = send email, else don\'t.',indexed='0',multihomed='0',prettyname='Get Emails for Community Invites',scope='general' WHERE name='opt_comminvitemail';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', 'N = send no email, D = send daily digest, else send email always.', '0', '0', 'opt_communityjoinemail', 'Get Emails for Join Requests', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='N = send no email, D = send daily digest, else send email always.',indexed='0',multihomed='0',prettyname='Get Emails for Join Requests',scope='general' WHERE name='opt_communityjoinemail';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', '1 = send poster comments they make, else don\'t.', '0', '0', 'opt_getselfemail', 'Get Emails for Comments You Make', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='1 = send poster comments they make, else don\'t.',indexed='0',multihomed='0',prettyname='Get Emails for Comments You Make',scope='general' WHERE name='opt_getselfemail';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'bool', '0: show friendofs, 1: hide friendofs', '0', '0', 'opt_hidefriendofs', 'Hide Friend-Of List', 'general');
UPDATE userproplist SET cldversion='4',datatype='bool',des='0: show friendofs, 1: hide friendofs',indexed='0',multihomed='0',prettyname='Hide Friend-Of List',scope='general' WHERE name='opt_hidefriendofs';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'bool', '0: show memberofs, 1: hide memberofs', '0', '0', 'opt_hidememberofs', 'Hide Member-Of and Posting Access List', 'general');
UPDATE userproplist SET cldversion='4',datatype='bool',des='0: show memberofs, 1: hide memberofs',indexed='0',multihomed='0',prettyname='Hide Member-Of and Posting Access List',scope='general' WHERE name='opt_hidememberofs';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', 'width|height: specifies maximum image size on a user\'s friends page.  0 for either field replaces all images.', '0', '0', 'opt_imagelinks', 'Use Placeholders on Your Friend\'s Page', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='width|height: specifies maximum image size on a user\'s friends page.  0 for either field replaces all images.',indexed='0',multihomed='0',prettyname='Use Placeholders on Your Friend\'s Page',scope='general' WHERE name='opt_imagelinks';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'bool', 'LJCUT disabled in friends view', '1', '0', 'opt_ljcut_disable_friends', 'LJCUT disabled in friends view', 'general');
UPDATE userproplist SET cldversion='4',datatype='bool',des='LJCUT disabled in friends view',indexed='1',multihomed='0',prettyname='LJCUT disabled in friends view',scope='general' WHERE name='opt_ljcut_disable_friends';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'bool', 'LJCUT disabled in lastn and day views', '1', '0', 'opt_ljcut_disable_lastn', 'LJCUT disabled in lastn and day views', 'general');
UPDATE userproplist SET cldversion='4',datatype='bool',des='LJCUT disabled in lastn and day views',indexed='1',multihomed='0',prettyname='LJCUT disabled in lastn and day views',scope='general' WHERE name='opt_ljcut_disable_lastn';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', 'N: No, S: some (anonymous), A: all', '1', '0', 'opt_logcommentips', 'Log Comment IPs', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='N: No, S: some (anonymous), A: all',indexed='1',multihomed='0',prettyname='Log Comment IPs',scope='general' WHERE name='opt_logcommentips';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', '', 'Maxium picture height to be shown in journal before being linkitized.  0: for no max', '1', '0', 'opt_maxpicheight', 'Max Picture Height', 'general');
UPDATE userproplist SET cldversion='4',datatype='',des='Maxium picture height to be shown in journal before being linkitized.  0: for no max',indexed='1',multihomed='0',prettyname='Max Picture Height',scope='general' WHERE name='opt_maxpicheight';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', '', 'Maxium picture width to be shown in journal before being linkitized.  0: for no max', '1', '0', 'opt_maxpicwidth', 'Max Picture Width', 'general');
UPDATE userproplist SET cldversion='4',datatype='',des='Maxium picture width to be shown in journal before being linkitized.  0: for no max',indexed='1',multihomed='0',prettyname='Max Picture Width',scope='general' WHERE name='opt_maxpicwidth';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('0', '', 'Maxium word length before forced word breaks.  0: for no max', '1', '0', 'opt_maxwordlength', 'Max Word Length', 'general');
UPDATE userproplist SET cldversion='0',datatype='',des='Maxium word length before forced word breaks.  0: for no max',indexed='1',multihomed='0',prettyname='Max Word Length',scope='general' WHERE name='opt_maxwordlength';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'bool', 'Show number of comments in URL', '0', '0', 'opt_nctalklinks', 'Show number of comments in URL', 'general');
UPDATE userproplist SET cldversion='4',datatype='bool',des='Show number of comments in URL',indexed='0',multihomed='0',prettyname='Show number of comments in URL',scope='general' WHERE name='opt_nctalklinks';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'bool', '1: do not send moderation emails, 0: default, send them', '0', '0', 'opt_nomodemail', 'No Moderation Email', 'general');
UPDATE userproplist SET cldversion='4',datatype='bool',des='1: do not send moderation emails, 0: default, send them',indexed='0',multihomed='0',prettyname='No Moderation Email',scope='general' WHERE name='opt_nomodemail';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'bool', '1: no forum icons shown, 0: default, show them', '1', '0', 'opt_notalkicons', 'No Forum Icons', 'general');
UPDATE userproplist SET cldversion='4',datatype='bool',des='1: no forum icons shown, 0: default, show them',indexed='1',multihomed='0',prettyname='No Forum Icons',scope='general' WHERE name='opt_notalkicons';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'bool', 'Boolean: 1 means show only mutual friends on your userinfo page, 0 (default) means to use the standard mode of showing everybody.', '1', '0', 'opt_showmutualfriends', 'Mutual Friends Display', 'general');
UPDATE userproplist SET cldversion='4',datatype='bool',des='Boolean: 1 means show only mutual friends on your userinfo page, 0 (default) means to use the standard mode of showing everybody.',indexed='1',multihomed='0',prettyname='Mutual Friends Display',scope='general' WHERE name='opt_showmutualfriends';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('0', 'char', 'Y: include links to topic directory, N: don\'t.', '1', '0', 'opt_showtopicstuff', 'Topic Directory Integration', 'general');
UPDATE userproplist SET cldversion='0',datatype='char',des='Y: include links to topic directory, N: don\'t.',indexed='1',multihomed='0',prettyname='Topic Directory Integration',scope='general' WHERE name='opt_showtopicstuff';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'bool', '1: use journal style when commenting on other journals from friends page', '0', '0', 'opt_stylemine', 'Style=Mine', 'general');
UPDATE userproplist SET cldversion='4',datatype='bool',des='1: use journal style when commenting on other journals from friends page',indexed='0',multihomed='0',prettyname='Style=Mine',scope='general' WHERE name='opt_stylemine';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', 'How much content to put into syndication (Atom/RSS) feeds; values are: title, summary, or friends', '', '', 'opt_synlevel', 'Syndication Level', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='How much content to put into syndication (Atom/RSS) feeds; values are: title, summary, or friends',indexed='',multihomed='',prettyname='Syndication Level',scope='general' WHERE name='opt_synlevel';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', 'User defined permissions for tags.  Format of prop: "add,control".  (Who can add tags, who can manage tags.)  Format of both is one of "public","private","friends","group:N" where N is the group id.', '0', '0', 'opt_tagpermissions', 'User Tag Permissions', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='User defined permissions for tags.  Format of prop: "add,control".  (Who can add tags, who can manage tags.)  Format of both is one of "public","private","friends","group:N" where N is the group id.',indexed='0',multihomed='0',prettyname='User Tag Permissions',scope='general' WHERE name='opt_tagpermisisons';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'bool', '1: friends view uses shared pictures, 0: uses poster\'s picture', '1', '0', 'opt_usesharedpic', 'Use Shared Journal Pic', 'general');
UPDATE userproplist SET cldversion='4',datatype='bool',des='1: friends view uses shared pictures, 0: uses poster\'s picture',indexed='1',multihomed='0',prettyname='Use Shared Journal Pic',scope='general' WHERE name='opt_usesharedpic';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', '1: ping weblogs.com with updates', '0', '0', 'opt_weblogscom', 'Ping Weblogs.com', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='1: ping weblogs.com with updates',indexed='0',multihomed='0',prettyname='Ping Weblogs.com',scope='general' WHERE name='opt_weblogscom';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', 'N: none, A: actual, L: livejournal, B: both', '1', '0', 'opt_whatemailshow', 'Which email address to display', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='N: none, A: actual, L: livejournal, B: both',indexed='1',multihomed='0',prettyname='Which email address to display',scope='general' WHERE name='opt_whatemailshow';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', 'Screen new comments: A=All, N=None, F=from non-Friends, R=from non-users', '0', '0', 'opt_whoscreened', 'Screening comments', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='Screen new comments: A=All, N=None, F=from non-Friends, R=from non-users',indexed='0',multihomed='0',prettyname='Screening comments',scope='general' WHERE name='opt_whoscreened';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'blobchar', 'Public key used for email gateway signature verification', '0', '0', 'public_key', 'PGP or GPG public key', 'general');
UPDATE userproplist SET cldversion='4',datatype='blobchar',des='Public key used for email gateway signature verification',indexed='0',multihomed='0',prettyname='PGP or GPG public key',scope='general' WHERE name='public_key';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', 'Username of other journal to redirect to, if u.statusvis==\"R\"', '1', '0', 'renamedto', 'Redirect to other account', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='Username of other journal to redirect to, if u.statusvis==\"R\"',indexed='1',multihomed='0',prettyname='Redirect to other account',scope='general' WHERE name='renamedto';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', 'Keep track of syncitems lastupdate value & time for last two getevent+syncitems requests, checking for loops from broken clients.', '0', '0', 'rl_syncitems_getevents_loop', 'Prevent loops in syncitems getevents', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='Keep track of syncitems lastupdate value & time for last two getevent+syncitems requests, checking for loops from broken clients.',indexed='0',multihomed='0',prettyname='Prevent loops in syncitems getevents',scope='general' WHERE name='rl_syncitems_getevents_loop';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', 'Records the error message when RSS parsing fails', '0', '0', 'rssparseerror', 'Syndication Parse Error', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='Records the error message when RSS parsing fails',indexed='0',multihomed='0',prettyname='Syndication Parse Error',scope='general' WHERE name='rssparseerror';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'num', 'The style ID# of the S1 style for the calendar view.', '0', '0', 's1_calendar_style', 'Calendar View StyleID', 'general');
UPDATE userproplist SET cldversion='4',datatype='num',des='The style ID# of the S1 style for the calendar view.',indexed='0',multihomed='0',prettyname='Calendar View StyleID',scope='general' WHERE name='s1_calendar_style';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'num', 'The style ID# of the S1 style for the day view view.', '0', '0', 's1_day_style', 'Day View StyleID', 'general');
UPDATE userproplist SET cldversion='4',datatype='num',des='The style ID# of the S1 style for the day view view.',indexed='0',multihomed='0',prettyname='Day View StyleID',scope='general' WHERE name='s1_day_style';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'num', 'The style ID# of the S1 style for the friends view page.', '0', '0', 's1_friends_style', 'Friends View StyleID', 'general');
UPDATE userproplist SET cldversion='4',datatype='num',des='The style ID# of the S1 style for the friends view page.',indexed='0',multihomed='0',prettyname='Friends View StyleID',scope='general' WHERE name='s1_friends_style';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'num', 'The style ID# of the S1 style for the recent entries view.', '0', '0', 's1_lastn_style', 'Recent View StyleID', 'general');
UPDATE userproplist SET cldversion='4',datatype='num',des='The style ID# of the S1 style for the recent entries view.',indexed='0',multihomed='0',prettyname='Recent View StyleID',scope='general' WHERE name='s1_lastn_style';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'num', 'S2 Styleid to use', '0', '0', 's2_style', 'S2 Style', 'general');
UPDATE userproplist SET cldversion='4',datatype='num',des='S2 Styleid to use',indexed='0',multihomed='0',prettyname='S2 Style',scope='general' WHERE name='s2_style';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', 'BML scheme name', '0', '0', 'schemepref', 'BML Scheme Preference', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='BML scheme name',indexed='0',multihomed='0',prettyname='BML Scheme Preference',scope='general' WHERE name='schemepref';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('0', 'char', 'Index to speed directory searches.  Only present if opt_infoshow=Y', '1', '1', 'sidx_bdate', 'SearchIndex: Birthdate', 'general');
UPDATE userproplist SET cldversion='0',datatype='char',des='Index to speed directory searches.  Only present if opt_infoshow=Y',indexed='1',multihomed='1',prettyname='SearchIndex: Birthdate',scope='general' WHERE name='sidx_bdate';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('0', 'char', 'Index to speed directory searches.  Format %2s-%s-%s (iso country code, state, city).  Only present if opt_infoshow=Y', '1', '1', 'sidx_loc', 'SearchIndex: Location', 'general');
UPDATE userproplist SET cldversion='0',datatype='char',des='Index to speed directory searches.  Format %2s-%s-%s (iso country code, state, city).  Only present if opt_infoshow=Y',indexed='1',multihomed='1',prettyname='SearchIndex: Location',scope='general' WHERE name='sidx_loc';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', '2 letter state code, or full state name', '1', '0', 'state', 'State', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='2 letter state code, or full state name',indexed='1',multihomed='0',prettyname='State',scope='general' WHERE name='state';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'num', '\'1\' for S1 or \'2\' for S2.  Undefined means site default.', '0', '0', 'stylesys', 'Style System to use', 'general');
UPDATE userproplist SET cldversion='4',datatype='num',des='\'1\' for S1 or \'2\' for S2.  Undefined means site default.',indexed='0',multihomed='0',prettyname='Style System to use',scope='general' WHERE name='stylesys';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', 'Notes about underage status; Y: underage due to birthday; C: underage due to cookie.', '0', '0', 'underage_status', 'Underage Status', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='Notes about underage status; Y: underage due to birthday; C: underage due to cookie.',indexed='0',multihomed='0',prettyname='Underage Status',scope='general' WHERE name='underage_status';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', 'URL of website', '0', '0', 'url', 'Website Address', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='URL of website',indexed='0',multihomed='0',prettyname='Website Address',scope='general' WHERE name='url';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', 'Name of website', '0', '0', 'urlname', 'Website Name', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='Name of website',indexed='0',multihomed='0',prettyname='Website Name',scope='general' WHERE name='urlname';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('0', 'char', 'Yahoo ID', '1', '1', 'yahoo', 'Yahoo ID', 'general');
UPDATE userproplist SET cldversion='0',datatype='char',des='Yahoo ID',indexed='1',multihomed='1',prettyname='Yahoo ID',scope='general' WHERE name='yahoo';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', '5 digit zip code (if in US)', '1', '0', 'zip', 'ZIP code', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='5 digit zip code (if in US)',indexed='1',multihomed='0',prettyname='ZIP code',scope='general' WHERE name='zip';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'bool', 'Disable QuickReply', '0', '0', 'opt_no_quickreply', 'Disable QuickReply', 'general');
UPDATE userproplist SET cldversion='4',datatype='bool',des='Disable QuickReply',indexed='0',multihomed='0',prettyname='Disable QuickReply',scope='general' WHERE name='opt_no_quickreply';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'num', 'Number of Public Fotobilder Pictures', '0', '0', 'fb_num_pubpics', 'Num FB Pics', 'general');
UPDATE userproplist SET cldversion='4',datatype='num',des='Number of Public Fotobilder Pictures',indexed='0',multihomed='0',prettyname='Num FB Pics',scope='general' WHERE name='fb_num_pubpics';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', 'Default comment options for post-by-email entries', '', '', 'emailpost_comments', 'Comment options for email posting', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='Default comment options for post-by-email entries',indexed='',multihomed='',prettyname='Comment options for email posting',scope='general' WHERE name='emailpost_comments';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', 'Default gallery name for post-by-email pictures', '', '', 'emailpost_gallery', 'Gallery name for email imgs', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='Default gallery name for post-by-email pictures',indexed='',multihomed='',prettyname='Gallery name for email imgs',scope='general' WHERE name='emailpost_gallery';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', 'Default image cut type for post-by-email images', '', '', 'emailpost_imgcut', 'Image cut type for email posting', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='Default image cut type for post-by-email images',indexed='',multihomed='',prettyname='Image cut type for email posting',scope='general' WHERE name='emailpost_imgcut';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', 'Default image layout for post-by-email images', '', '', 'emailpost_imglayout', 'Image layout for email posting', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='Default image layout for post-by-email images',indexed='',multihomed='',prettyname='Image layout for email posting',scope='general' WHERE name='emailpost_imglayout';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', 'Default security for post-by-email images', '', '', 'emailpost_imgsecurity', 'Image security for email posting', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='Default security for post-by-email images',indexed='',multihomed='',prettyname='Image security for email posting',scope='general' WHERE name='emailpost_imgsecurity';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', 'Default image size for post-by-email images', '', '', 'emailpost_imgsize', 'Image size for email posting', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='Default image size for post-by-email images',indexed='',multihomed='',prettyname='Image size for email posting',scope='general' WHERE name='emailpost_imgsize';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', 'Default security for post-by-email entries', '', '', 'emailpost_security', 'Entry security for email posting', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='Default security for post-by-email entries',indexed='',multihomed='',prettyname='Entry security for email posting',scope='general' WHERE name='emailpost_security';
INSERT IGNORE INTO userproplist (cldversion, datatype, des, indexed, multihomed, name, prettyname, scope) VALUES ('4', 'char', 'Default userpic for post-by-email entries', '', '', 'emailpost_userpic', 'Userpic for email posting', 'general');
UPDATE userproplist SET cldversion='4',datatype='char',des='Default userpic for post-by-email entries',indexed='',multihomed='',prettyname='Userpic for email posting',scope='general' WHERE name='emailpost_userpic';
